{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { DECREMENT_COUNTER, INCREMENT_COUNTER } from \"../actions/counterActions\";\nvar initialState = {\n  value: 0\n};\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value + 1\n      });\n\n    case DECREMENT_COUNTER:\n      return _objectSpread({}, state, {\n        value: state.value - 1\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["D:/WEB/work/pets/next-redux/redux/reducers/counterReducer.js"],"names":["DECREMENT_COUNTER","INCREMENT_COUNTER","initialState","value","counterReducer","state","action","type"],"mappings":";;;;;;AAAA,SAAQA,iBAAR,EAA2BC,iBAA3B,QAAmD,2BAAnD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,iBAAL;AACI,+BAAWI,KAAX;AAAkBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvC;;AACJ,SAAKH,iBAAL;AACI,+BAAWK,KAAX;AAAkBF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvC;;AACJ;AACI,+BAAWE,KAAX;AANR;AAQH,CATD;;AAWA,eAAeD,cAAf","sourcesContent":["import {DECREMENT_COUNTER, INCREMENT_COUNTER} from \"../actions/counterActions\";\r\n\r\nconst initialState = {\r\n  value: 0\r\n};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INCREMENT_COUNTER:\r\n            return {...state, value: state.value + 1};\r\n        case DECREMENT_COUNTER:\r\n            return {...state, value: state.value - 1};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default counterReducer;"]},"metadata":{},"sourceType":"module"}